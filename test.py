import matplotlib.pyplot as plt


def parse_lines(input_lines):
    lines = []
    for line in input_lines.split("\n"):
        if line.startswith("Line:"):
            # Remove "Line: " and split by " -> "
            points = line[6:].split(" -> ")
            # Extract x and y coordinates for both points
            x1, y1 = map(float, points[0].split(", "))
            x2, y2 = map(float, points[1].split(", "))
            lines.append(((x1, y1), (x2, y2)))
    return lines


# (119.92, 85.2) (134.8, 100.08) (134.8, 134.8) (85.2, 134.8) (85.2, 85.2)
def parse_points(input_points):
    points = []
    for point in input_points.split(")"):
        if point:
            point = point.lstrip(" ()\n")
            x, y = map(float, point.split(","))
            points.append((x, y))
    return points


def plot_lines(lines):
    for line in lines:
        (x1, y1), (x2, y2) = line
        plt.plot([x1, x2], [y1, y2], marker="o")

    plt.xlabel("X-axis")
    plt.ylabel("Y-axis")
    plt.title("Line Plot")
    plt.grid(True)
    plt.gca().set_aspect("equal", adjustable="box")
    plt.show()


def plot_points(points, color="blue"):
    x_values = [point[0] for point in points]
    y_values = [point[1] for point in points]
    plt.plot(x_values, y_values, marker="o", color=color)


colors = ["blue", "green", "red", "cyan", "m", "y", "k", "w"]

if __name__ == "__main__":
    input_points = """(127.42, 92.7) (142.3, 107.58) (142.3, 142.3) (128.03, 142.3) (130.43, 140.2) (130.45, 140.18) (132.86, 137.35) (132.88, 137.33) (134.84, 134.16) (134.85, 134.14) (135.65, 132.47) (135.66, 132.45) (136.87, 128.93) (136.88, 128.9) (137.29, 127.08) (137.29, 127.06) (137.68, 123.36) (137.68, 123.33) (137.54, 119.62) (137.54, 119.6) (137.25, 117.76) (137.24, 117.74) (136.27, 114.15) (136.26, 114.12) (134.77, 110.71) (134.76, 110.68) (132.77, 107.53) (132.75, 107.51) (130.33, 104.69) (130.32, 104.67) (128.95, 103.4) (128.93, 103.39) (125.94, 101.18) (125.92, 101.17) (124.31, 100.24) (124.29, 100.23) (120.88, 98.74) (120.86, 98.73) (119.09, 98.18) (119.07, 98.17) (115.42, 97.46) (115.39, 97.46) (111.67, 97.32) (111.64, 97.32) (107.94, 97.71) (107.92, 97.71) (106.1, 98.12) (106.07, 98.13) (102.56, 99.34) (102.54, 99.35) (100.86, 100.15) (100.84, 100.16) (97.67, 102.12) (97.66, 102.13) (96.2, 103.28) (96.18, 103.3) (93.53, 105.91) (93.51, 105.92) (92.7, 106.92) (92.7, 92.7) (127.42, 92.7)
(114.62, 107.86) (117.34, 108.51) (117.34, 108.52) (118.66, 109.05) (121.07, 110.43) (123.2, 112.27) (124.96, 114.51) (125.65, 115.69) (125.65, 115.7) (126.7, 118.34) (127.23, 121.11) (127.23, 123.89) (126.7, 126.66) (126.24, 127.99) (124.96, 130.49) (123.22, 132.71) (122.2, 133.68) (119.91, 135.31) (118.66, 135.95) (116, 136.88) (114.59, 137.14) (111.8, 137.27) (108.99, 136.88) (107.65, 136.48) (105.11, 135.32) (102.8, 133.68) (101.78, 132.71) (100.04, 130.49) (98.76, 127.99) (98.3, 126.66) (97.77, 123.89) (97.77, 121.11) (98.3, 118.34) (99.35, 115.7) (99.34, 115.69) (100.04, 114.51) (101.8, 112.27) (103.93, 110.43) (106.34, 109.05) (107.66, 108.52) (107.65, 108.51) (110.38, 107.85) (110.39, 107.86) (111.8, 107.72) (114.62, 107.86)
(110.76, 112.45) (110.72, 112.46) (109.58, 112.73) (109.55, 112.74) (107.42, 113.66) (107.39, 113.67) (106.42, 114.31) (106.39, 114.33) (104.7, 115.92) (104.68, 115.95) (103.99, 116.89) (103.97, 116.92) (102.92, 118.99) (102.91, 119.02) (102.58, 120.14) (102.57, 120.18) (102.3, 122.48) (102.3, 122.52) (102.57, 124.82) (102.58, 124.86) (102.91, 125.98) (102.92, 126.01) (103.97, 128.08) (104, 128.12) (105.49, 129.9) (105.52, 129.93) (107.38, 131.32) (107.41, 131.34) (108.45, 131.86) (108.48, 131.87) (110.71, 132.54) (110.75, 132.55) (111.9, 132.68) (111.93, 132.68) (114.24, 132.55) (114.29, 132.54) (116.52, 131.87) (116.55, 131.86) (117.59, 131.34) (117.62, 131.32) (119.48, 129.93) (119.51, 129.9) (121, 128.12) (121.03, 128.08) (122.08, 126.01) (122.09, 125.98) (122.42, 124.86) (122.43, 124.82) (122.7, 122.52) (122.7, 122.48) (122.43, 120.18) (122.42, 120.14) (122.09, 119.02) (122.08, 118.99) (121.03, 116.92) (121.01, 116.89) (120.32, 115.95) (120.3, 115.92) (118.61, 114.33) (118.58, 114.31) (117.61, 113.67) (117.58, 113.66) (115.45, 112.74) (115.4, 112.72) (113.11, 112.32) (113.07, 112.32) (110.76, 112.45)
(112.9, 117.72) (114.41, 118.09) (115.74, 118.97) (116.72, 120.21) (117.23, 121.71) (117.23, 123.28) (116.72, 124.78) (115.74, 126.02) (114.41, 126.9) (112.9, 127.28) (112.1, 127.28) (110.58, 126.9) (109.25, 126.02) (108.27, 124.78) (107.77, 123.28) (107.77, 121.71) (108.27, 120.21) (109.25, 118.97) (110.58, 118.09) (112.1, 117.72) (112.9, 117.72)"""

    lines = input_points.strip().split("\n")
    num_lines = len(lines)

    # Calculate the min and max values for x and y coordinates
    all_points = []
    for line in lines:
        points = parse_points(line)
        all_points.extend(points)

    x_values = [point[0] for point in all_points]
    y_values = [point[1] for point in all_points]
    x_min, x_max = min(x_values) - 5, max(x_values) + 5
    y_min, y_max = min(y_values) - 5, max(y_values) + 5

    # Create a figure for individual plots
    plt.figure(figsize=(10, 2 * num_lines))

    for i, line in enumerate(lines):
        points = parse_points(line)
        plt.subplot(1, num_lines + 1, i + 1)
        plot_points(points, color="red")
        plt.xlabel("X-axis")
        plt.ylabel("Y-axis")
        plt.title(f"Line {i + 1}")
        plt.grid(True)
        plt.gca().set_aspect("equal", adjustable="box")
        plt.xlim(x_min, x_max)
        plt.ylim(y_min, y_max)

    # Create a combined plot
    plt.subplot(1, num_lines + 1, num_lines + 1)
    for line in lines:
        points = parse_points(line)
        plot_points(points, color="blue")
    plt.xlabel("X-axis")
    plt.ylabel("Y-axis")
    plt.title("Combined Plot")
    plt.grid(True)
    plt.gca().set_aspect("equal", adjustable="box")
    plt.xlim(x_min, x_max)
    plt.ylim(y_min, y_max)

    plt.tight_layout()
    plt.show()

    # input_lines = """Line: 112.2, 142.5 -> 142.5, 142.5
# Line: 112.2, 142.5 -> 92.5, 142.5
# Line: 142.5, 122.8 -> 142.5, 92.5
# Line: 142.5, 122.8 -> 142.5, 142.5
# Line: 122.8, 92.5 -> 92.5, 92.5
# Line: 122.8, 92.5 -> 142.5, 92.5
# Line: 92.5, 112.2 -> 92.5, 142.5
# Line: 92.5, 112.2 -> 92.5, 92.5"""

#     lines = parse_lines(input_lines)
#     plot_lines(lines)
